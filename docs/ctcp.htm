<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body bgcolor="#FFFFFF" text="#000099" link="#0000FF" vlink="#666666">
<blockquote> 
  <blockquote>
    <p>&nbsp;</p>
    <H3>Table of Contents:</H3>
  </blockquote>
</blockquote>
<MENU> 
  <menu> 
    <menu>
      <li><A HREF="#1">1. Introduction</A> </li>
      <menu>
        <li><A HREF="#1.1">1.1 Definitions</A> </li>
        <li><A HREF="#1.2">1.2 Background</A> </li>
      </menu>
      <li><A HREF="#2">2. General Requirements </A> </li>
      <menu>
        <li><A HREF="#2.1">2.1 Parsing Order </A> </li>
        <li><A HREF="#2.2">2.2 Quoting </A> </li>
      </menu>
      <li><A HREF="#3">3. Text Attributes </A> </li>
      <menu>
        <li><A HREF="#3.1">3.1 Bold </A> </li>
        <li><A HREF="#3.2">3.2 Inverse (Reverse) </A> </li>
        <li><A HREF="#3.3">3.3 Underline </A> </li>
        <li><A HREF="#3.4">3.4 Overstrike </A> </li>
        <li><A HREF="#3.5">3.5 Italics </A> </li>
        <li><A HREF="#3.6">3.6 Colours </A> </li>
        <li><A HREF="#3.7">3.7 Size </A> </li>
        <li><A HREF="#3.9">3.9 Extensions </A> </li>
        <li><A HREF="#3.10">3.10 Violations </A> </li>
        <li><A HREF="#3.11">3.11 Deprecations </A> </li>
      </menu>
      <li><A HREF="#4">4. User Requests </A> </li>
      <menu>
        <li><A HREF="#4.1">4.1 VERSION </A> </li>
        <li><A HREF="#4.2">4.2 PING </A> </li>
        <li><A HREF="#4.3">4.3 CLIENTINFO </A> </li>
        <li><A HREF="#4.4">4.4 ACTION </A> </li>
        <li><A HREF="#4.5">4.5 USERINFO </A> </li>
        <li><A HREF="#4.6">4.6 TIME </A> </li>
        <li><A HREF="#4.7">4.7 DCC </A> </li>
        <menu>
          <li><A HREF="#4.7.1">4.7.1 CHAT </A> </li>
          <li><A HREF="#4.7.2">4.7.2 XMIT </A> </li>
          <li><A HREF="#4.7.3">4.7.3 OFFER </A> </li>
        </menu>
        <li><A HREF="#4.8">4.8 XDCC </A> </li>
        <menu>
          <li><A HREF="#4.8.1">4.8.1 LIST </A> </li>
          <li><A HREF="#4.8.2">4.8.2 SEND </A> </li>
        </menu>
        <li><A HREF="#4.9">4.9 URL </A> </li>
        <li><A HREF="#4.10">4.10 EXT </A> </li>
        <li><A HREF="#4.11">4.11 SCR </A> </li>
        <li><A HREF="#4.12">4.12 Depecations </A> </li>
      </menu>
      <li><A HREF="#5">5. Assigned IDs </A> </li>
      <menu>
        <li><A HREF="#5.1">5.1 Client Extensions</A> </li>
        <li><A HREF="#5.2">5.2 DCC Protocols </A> </li>
      </menu>
    </menu>
  </menu>
</MENU>
<blockquote> 
  <blockquote>
    <p>&nbsp;</p>
    <H3><A NAME="1">1. Introduction</A></H3>
    <p>&nbsp;</p>
    <H3><A NAME="1.1">1.1 Definitions:</A></H3>
    <dl>
      <dt>&lt;request&gt;</dt>
      <dd> Any valid request, as discussed in 3. Sequence of chacters A-Z, a-z 
        and 0-9. A space is used to mark the end of the request. </dd>
      <dt>&lt;text&gt;</dt>
      <dd> Any arbitrary text, subject to quoting as discussed in 2b. [ ] Optional 
        item ... Item repeated as desired </dd>
      <dt>&lt;marker&gt;</dt>
      <dd> Character used to begin and end a user request. Currently ^A, \001. 
      </dd>
      <dt>&lt;quoted&gt;</dt>
      <dd> Text which is passed thru a quoting mechanism as yet undefined. Not 
        currently used. </dd>
      <dt>&lt;filename&gt;</dt>
      <dd>Name of a file for transmission using DCC. File names should be presented 
        without path information. Path separators contained in a filename will 
        invalidate the request. Each client will be required to accept and convert 
        a filename to local conventions. </dd>
      <dt>&lt;format&gt;</dt>
      <dd>Character used to begin and optionally end a text formatting request. 
        Currently ^F, \006. </dd>
      <dt>&lt;EOT&gt;</dt>
      <dd>An extended text attribute specification is terminated by a ^D, \004. 
      </dd>
      <dt>&lt;space&gt;</dt>
      <dd>Required space. </dd>
      <dt>&lt;arg&gt;</dt>
      <dd>Request/Format argument. </dd>
      <dt>&lt;index&gt;</dt>
      <dd>Colour selected from the table below. Each spec will be preceded by 
        an I, indicating this is an indexed value. 
        <p> Single character, 0-9 and A-F. </p>
        <p> Example: IA </p>
      </dd>
      <dt>&lt;RGB&gt;</dt>
      <dd> 3 byte value, representing Red, Green & Blue attributes as values from 
        0 - 255. Each byte will be encoded in hexadecimal and converted to text. 
        Characters 0-9 and A-F will be permitted. Each such value will be preceded 
        by a #, indicating RGB. 
        <p> Example: #00FF00 &lt;&lt; produces light green, btw. </p>
      </dd>
      <dt>&lt;colour&gt;</dt>
      <dd>A colour specification. This can either be an indexed colour or an RGB 
        value. 
        <p> Specification: &lt;index&gt; | &lt;RGB&gt; </p>
      </dd>
      <dt>&lt;port&gt;</dt>
      <dd> TCP/IP port number, 1024 - 65535 </dd>
      <dt>&lt;ip&gt;</dt>
      <dd> Internet Protocol number, as follows: 
        <ol>
          <li>IP4 dotted notation (d.d.d.d)<BR>
            Example: 192.168.0.5 </li>
          <li> IP6 hex notation, also compressed format (x:x:x:x:x:x:x:x)<BR>
            See RFC 1884, chapter 2.2 for more info.<BR>
            Example: ::FFFF:C0:A8:00:05 </li>
          <li> IP6 mixed hex notation (x:x:x:x:x:x:d.d.d.d)<BR>
            Example: ::FFFF:192.168.0.5 </li>
          <li> 32-bit IP4 number<BR>
            This will be phased out, but is deprecated as of this RFC.<BR>
            Retained for compatibility with current DCC CHAT implementation. </li>
        </ol>
      </dd>
      <dt>&lt;target&gt;</dt>
      <dd> Either a nickname or channel, something that IRC messages can be sent 
        to. </dd>
      <dt>&lt;id&gt;</dt>
      <dd> A 3 character ID code assigned to each known IRC client, used as part 
        of extended text attributes or extended request. </dd>
    </dl>
    <p>All specifications will be spaced for legibility, white space used for 
      this purpose will not be considered part of the format of a given command. 
      Only spaces shown as &lt;space&gt; are required by the protocol. </p>
    <p> Each colour will be an index, selected from the following table: </p>
  </blockquote>
</blockquote>
<TABLE CELLSPACING=0 CELLPADDING=3 BORDER=1>
  <TR> 
    <TH>Index
    <TH>Name
    <TH>RGB 
  <TR> 
    <TD ALIGN=CENTER> 0
    <TD> Black
    <TD> 000,000,000 
  <TR> 
    <TD ALIGN=CENTER> 1
    <TD> Blue
    <TD> 000,000,128 
  <TR> 
    <TD ALIGN=CENTER> 2
    <TD> Green
    <TD> 000,128,000 
  <TR> 
    <TD ALIGN=CENTER> 3
    <TD> Cyan
    <TD> 000,128,128 
  <TR> 
    <TD ALIGN=CENTER> 4
    <TD> Red
    <TD> 128,000,000 
  <TR> 
    <TD ALIGN=CENTER> 5
    <TD> Purple
    <TD> 128,000,128 
  <TR> 
    <TD ALIGN=CENTER> 6
    <TD> Brown
    <TD> 128,128,000 
  <TR> 
    <TD ALIGN=CENTER> 7
    <TD> Lt Gray
    <TD> 204,204,204 
  <TR> 
    <TD ALIGN=CENTER> 8
    <TD> Gray
    <TD> 128,128,128 
  <TR> 
    <TD ALIGN=CENTER> 9
    <TD> Lt Blue
    <TD> 000,000,255 
  <TR> 
    <TD ALIGN=CENTER> A
    <TD> Lt Green
    <TD> 000,255,000 
  <TR> 
    <TD ALIGN=CENTER> B
    <TD> Lt Cyan
    <TD> 000,255,255 
  <TR> 
    <TD ALIGN=CENTER> C
    <TD> Lt Red
    <TD> 255,000,000 
  <TR> 
    <TD ALIGN=CENTER> D
    <TD> Pink
    <TD> 255,000,255 
  <TR> 
    <TD ALIGN=CENTER> E
    <TD> Yellow
    <TD> 255,255,000 
  <TR> 
    <TD ALIGN=CENTER> F
    <TD> White
    <TD> 255,255,255 
</TABLE>
<blockquote> 
  <blockquote>
    <p>&nbsp;</p>
    <H3><A NAME="2">2. General Requirements</A></H3>
  </blockquote>
</blockquote>
<MENU> 
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="2.1">2.1 Parsing Order</A></H3>
      <p>The CTCP protocol involves different levels of encapsulation and quoting, 
        which can be confused. Below is the order of parsing of incoming messages, 
        which must be used in reverse for assembling requests or replies. This 
        will be involved in the parsing of PRIVMSG, NOTICE and DCC CHAT traffic. 
        This order is for user requests (section 4) only. Text attributes (section 
        3) should be parsed where appropriate. </p>
      <ul>
        <li>Check for request -- text embedded between &lt;marker&gt;s. </li>
      </ul>
      <p>If a request is found, it should be processed as follows: </p>
      <ul>
        <li>Break message into tokens using &lt;space&gt;. </li>
        <li>Interpret first token as &lt;request&gt;. </li>
        <li>Unquote tokens specified as requiring quoting for the given &lt;request&gt;. 
        </li>
        <li>Process request. </li>
      </ul>
      <p>A message containing multiple valid requests should be processed in a 
        left to right order. Requests generating replies may or may not be combined 
        into a single message, but must be returned in the same order as the requests 
        were processed. </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="2.2">2.2 Quoting</A></H3>
      <p>To allow transmission thru the server, which reserves certain characters 
        for its own use, as well as to support the workings of the protocol, various 
        characters contained in request messages will require quoting. Listed 
        below are the characters which require quoting, as well as their quoted 
        equivalents. </p>
    </blockquote>
  </blockquote>
  <TABLE CELLSPACING=0 CELLPADDING=3 BORDER=1>
    <TR> 
      <TH> Name
      <TH> ASCII<BR>
        (Octal)
      <TH> Quoted 
    <TR> 
      <TD> NUL (null)
      <TD ALIGN=CENTER> 000
      <TD ALIGN=CENTER> '\0' 
    <TR> 
      <TD> STX (ctcp marker)
      <TD ALIGN=CENTER> 001
      <TD ALIGN=CENTER> '\1' 
    <TR> 
      <TD> LF (newline)
      <TD ALIGN=CENTER> 012
      <TD ALIGN=CENTER> '\n' 
    <TR> 
      <TD> CR (carriage return)
      <TD ALIGN=CENTER>015
      <TD ALIGN=CENTER> '\r' 
    <TR> 
      <TD> SPC (space)
      <TD ALIGN=CENTER> 040
      <TD ALIGN=CENTER> '\@' 
    <TR> 
      <TD> \ (backslash)
      <TD ALIGN=CENTER> 134
      <TD ALIGN=CENTER> '\\' 
  </TABLE>
  <blockquote> 
    <blockquote>
      <p> Quoting will only be applied to arguments which require it as specified 
        in section 4 below. </p>
    </blockquote>
  </blockquote>
</MENU>
<blockquote> 
  <blockquote>
    <p>&nbsp;</p>
    <H3><A NAME="3">3. Text Attributes</A></H3>
    <p>The primary task of an IRC Client program is to display text to the user, 
      and allow text messages to be sent to other users. As such, the following 
      specifications affect all aspects of a particular client's display. All 
      text presented to the user should be assessed for attribute changes. It 
      is up to each client how it interprets the request, as well as whether or 
      not to present a particular attribute change request. </p>
    <p> All attributes are cumulative, that is to say, no specific attribute overrides 
      any other attribute type. All attributes requests may be ignored, and any 
      particular combination of attributes may be ignored, either by design or 
      by user request. Certain combinations may not make sense in all environments, 
      and are therefore not required to be implemented. </p>
  </blockquote>
</blockquote>
<MENU> 
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="3.1">3.1 Bold</A></H3>
      <p>Used to toggle the bold state. Clients may display this by using the 
        "BOLD" attribute of the current font, or by choosing predefined colour 
        combination, based on the capabilities of the terminal being used. </p>
      <p> Specification: &lt;format&gt; B </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="3.2">3.2 Inverse (Reverse)</A></H3>
      <p>Used to toggle the inverse state. This should be displayed by reversing 
        the foreground and background colours of the current attribute. If this 
        behavior is not readily available to the client coder due to terminal 
        type restrictions, user defined colours may be used to indicate this state. 
      </p>
      <p> Specification: &lt;format&gt; V </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="3.3">3.3 Underline</A></H3>
      <p>Used to toggle the underline state. This should be displayed by using 
        the "UNDERLINE" attribute of the current font, or by choosing predefined 
        colour combinations, based on the capabilities of the terminal being used. 
      </p>
      <p> Specification: &lt;format&gt; U </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="3.4">3.4 Overstrike</A></H3>
      <p>Used to toggle the overstrike state. This should be displayed by using 
        the "OVERSTRIKE" attribute of the current font, or by choosing predefined 
        colour combinations, based on the capabilities of the terminal being used. 
      </p>
      <p> Specification: &lt;format&gt; S </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="3.5">3.5 Italics</A></H3>
      <p>Used to toggle the italics state. This should be displayed by using the 
        "ITALICS" attribute of the current font, or by choosing predefined colour 
        combinations, based on the capabilities of the terminal being used. </p>
      <p> Specification: &lt;format&gt; I </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="3.6">3.6 Colours</A></H3>
      <p>This allows the requestor to specify the desired colours in which the 
        text following this attribute will be displayed. This attribute is cumulative 
        as well, within the restrictions of the terminal in use. Colours may be 
        chosen in two methods, either from an indexed colour table, or by specifying 
        an RGB value. As a result, each specification below offers an option of 
        selecting an RGB or Index value. </p>
      <p> There will be 3 forms of request, as well as a means to end a request. 
      </p>
      <p> Specification: &lt;format&gt; CA &lt;colour&gt; &lt;colour&gt; </p>
    </blockquote>
  </blockquote>
  <MENU> 
    <menu> 
      <menu>
        <li> This form specifies both the foreground and background colours, in 
          that order. Identical values of fore and back should be considered invalid 
          and ignored. The client may define a range in which colours of a similar 
          nature may also be ignored. One possible means of comparison would be: 
        </li>
        <li> R1 &lt; R2 - 8 or R1 &gt; R2 + 8<BR>
          G1 &lt; G2 - 8 or G1 &gt; G2 + 8<BR>
          B1 &lt; B2 - 8 or B1 &gt; B2 + 8 </li>
        <li> If a pair of colours passes these 3 tests, then it should be considered 
          different enough for display purposes, based on constraints of the current 
          display screen. The choice of a range of 16 values is arbitrary for 
          the example, and individual clients may choose larger or smaller values 
          at their discretion. </li>
        <li> This particular request will specify both the foreground and background 
          of any text to follow it. Foreground colour will be specified first 
          in this format. Clients may ignore either component or both, based on 
          user requests. A selection of &lt;fore&gt; and &lt;back&gt; with the 
          same value should be considered invalid and ignored, using all other 
          currently active attributes. </li>
      </menu>
    </menu>
  </MENU>
  <blockquote> 
    <blockquote>
      <p> Specification: &lt;format&gt; CF &lt;colour&gt; </p>
    </blockquote>
  </blockquote>
  <MENU> 
    <menu> 
      <menu>
        <li> Specify a change in foreground colour only. The current background 
          colour is kept. Requests which set the foreground colour to one similar 
          to the current background colour should be ignored. </li>
      </menu>
    </menu>
  </MENU>
  <blockquote> 
    <blockquote>
      <p> Specification: &lt;format&gt; CB &lt;colour&gt; </p>
    </blockquote>
  </blockquote>
  <MENU> 
    <menu> 
      <menu>
        <li> Specify a change in background colour only. The current foreground 
          colour is preserved. Requests which set the background colour to one 
          similar to the current foreground should be ignored. </li>
      </menu>
    </menu>
  </MENU>
  <blockquote> 
    <blockquote>
      <p> Specification: &lt;format&gt; CX &lt;A|F|B&gt; </p>
    </blockquote>
  </blockquote>
  <MENU> 
    <menu> 
      <menu>
        <li> Remove the current colour attributes, leaving all other attributes 
          intact. The type argument specifies which attribute, or both, is being 
          ended. A - both fore and back, F - fore only, B - back only. </li>
      </menu>
      <li></li>
    </menu>
  </MENU>
  <blockquote> 
    <blockquote>
      <H3><A NAME="3.7">3.7 Size</A></H3>
      <p>Choice of typeface point sizes may be made by the use of the Size text 
        attribute. An argument consisting of 2 decimal digits is used to set the 
        typeface point size used for subsequent display. Valid values are 01 - 
        72. A value of 00 is used to reset the size attribute. </p>
      <p> Specification: &lt;format&gt; F nn </p>
    </blockquote>
  </blockquote>
  <MENU> 
    <menu> 
      <menu>
        <li> Additionally, the point size may be changed in steps. These can be 
          either points or in defined step sizes or faces. </li>
      </menu>
    </menu>
  </MENU>
  <blockquote> 
    <blockquote>
      <p> Specification: &lt;format&gt; F +n<BR>
        Specification: &lt;format&gt; F -n </p>
    </blockquote>
  </blockquote>
  <MENU> 
    <menu> 
      <menu>
        <li> where the sign indicates direction positive or negative and N is 
          a 1-4 step count to modify the current typeface. </li>
      </menu>
      <li></li>
    </menu>
  </MENU>
  <blockquote> 
    <blockquote>
      <H3><A NAME="3.8">3.8 Normal</A></H3>
      <p>In order to facilitate the clearing of all currently set text attributes, 
        a means of specifying a return to baseline is desired. The following code 
        will clear all attributes and return to displaying text in the client's 
        currently defined 'normal' attribute. </p>
      <p> Specification: &lt;format&gt; N </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="3.9">3.9 Extensions</A></H3>
      <p>In order to facilitate the extension of this protocol, a client may indicate 
        such an extension as follows: </p>
      <p> Specification: &lt;format&gt; X &lt;id&gt; [&lt;arg&gt; [...]] &lt;EOT&gt; 
      </p>
    </blockquote>
  </blockquote>
  <MENU> 
    <menu> 
      <menu>
        <li> The &lt;id&gt; field will contain a 3 character ID value, assigned 
          to each client below. New clients should request an assigned ID from 
          the appropriate authority. Current assignments are in section 5. </li>
      </menu>
      <li></li>
    </menu>
  </MENU>
  <blockquote> 
    <blockquote>
      <H3><A NAME="3.10">3.10 Violations</A></H3>
      <p>Any combination not listed above is considered a violation of the formatting 
        protocol. Any such violation of this protocol will require immediate expulsion 
        from IRC of the individuals in question, with a note for their mommy pinned 
        to their lapel. </p>
      <p> Until this desired result becomes feasable however, it is recommended 
        that the client discard the &lt;format&gt; character and continue to display 
        the line as if it had not been present. </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="3.11">3.11 Deprecations</A></H3>
      <p>Currently implemented standard codes are ^B for Bold, ^V for Inverse 
        or (Reverse as in ircII), ^_ for Underline, and ^O to turn off all attributes. 
        These are being replaced by the above formatting specifications, and should 
        no longer be sent by IRC clients, per section 2. Clients receiving these 
        messages may either strip the codes from the text or display them as previously 
        defined. </p>
    </blockquote>
  </blockquote>
</MENU>
<blockquote> 
  <blockquote>
    <p>&nbsp;</p>
    <H3><A NAME="4">4. User Requests</A></H3>
    <p>In order to facilitate the exchange of information with in the IRC networks, 
      users have indicated desire to transmit files, determine transmission times 
      and send specialized text messages. As RFC 1459 offers no direct means to 
      exchange such requests, a protocol built upon RFC1459's is required. Over 
      the course of time, the use of PRIVMSG and NOTICE encapsulated within the 
      &lt;marker&gt; character, ^A, has come to be standard. This will be an attempt 
      to clarify earlier documents on this subject, as well as provide additional 
      functionality. </p>
    <p> The basic format of any request will be as follows: </p>
  </blockquote>
</blockquote>
<MENU> 
  <menu> 
    <menu>
      <li> PRIVMSG &lt;space&gt; &lt;target&gt; &lt;space&gt; : &lt;marker&gt; 
        &lt;command&gt; [&lt;arg&gt; [...]] &lt;marker&gt; </li>
    </menu>
  </menu>
</MENU>
<blockquote> 
  <blockquote>
    <p> Within the framework of these requests, some may generate a response. 
      This response will take the following general form: </p>
  </blockquote>
</blockquote>
<MENU> 
  <menu> 
    <menu>
      <li> NOTICE &lt;space&gt; &lt;target&gt; &lt;space&gt; : &lt;marker&gt; 
        &lt;command&gt; [&lt;arg&gt; [...]] &lt;marker&gt; </li>
    </menu>
  </menu>
</MENU>
<blockquote> 
  <blockquote>
    <p> Requests which are not recognised or are invalid may return an error message 
      similar to the following: </p>
  </blockquote>
</blockquote>
<MENU> 
  <menu> 
    <menu>
      <li> NOTICE &lt;space&gt; &lt;target&gt; &lt;space&gt; : &lt;marker&gt; 
        ERRMSG \ &lt;command&gt; [&lt;arg&gt; [...]] &lt;marker&gt; </li>
    </menu>
  </menu>
</MENU>
<blockquote> 
  <blockquote>
    <p> RFC 1459 indicates that the servers will contain flood control mechanisms, 
      which will disconnect clients that send excessive amounts of text to their 
      server within short periods of time. Given that this method is used by less 
      desirable elements of the IRC community to take over channels, gain access 
      to otherwise used nicknames and to disrupt the pursuit of enjoyment, each 
      client must take steps to avoid this outcome. </p>
    <p> For this reason, requests may be ignored by the client, based on selected 
      criteria. Each client must determine, for the benefit of its users, what 
      means it will provide to ensure that excessive text is not sent to the server. 
      Suggestions include sending only 1 CTCP reply per second, counting requests 
      and not responding to more than X requests per Y seconds, and others. The 
      use of ignore commands within clients may also be used to reject requests. 
    </p>
  </blockquote>
</blockquote>
<MENU> 
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="4.1">4.1 VERSION (required)</A></H3>
      <p>This request will provide to the initiator information about the particular 
        client is being used by the recipient. A valid request will have no arguments 
        accompanying it. This will generate a reply in the general form above, 
        with three fields in the response: </p>
      <p> Field 1: Client name and version<BR>
        Field 2: Operating system name and version<BR>
        Field 3: Contact for individual/organization responsible for client. </p>
      <p> These will be combined as follows: </p>
    </blockquote>
  </blockquote>
  <MENU> 
    <menu> 
      <menu>
        <li>&lt;marker&gt; VERSION &lt;field 1&gt; &lt;space&gt; &lt;field 2&gt; 
          &lt;space&gt; &lt;field 3&gt; &lt;marker&gt; </li>
      </menu>
    </menu>
  </MENU>
  <blockquote> 
    <blockquote>
      <p> Various clients include the ability to run scripts which may choose 
        to receive and reply to this request. At no time should any such script 
        be permitted to filter the request from the client's internal handling, 
        and as such, a client is REQUIRED to produce its own VERSION response, 
        subject to flood control. Text within the fields should be quoted to avoid 
        conflicting with the space separator. </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="4.2">4.2 PING &lt;space&gt; &lt;arg&gt; (required)</A></H3>
      <p>This request is intended to determine the round trip time of a message 
        from the initiator to the recipient and back to the initiator. The precipient 
        is required to return a duplicate of the received argument without modification. 
        Each client will define its own format for the 16 byte argument. Requests 
        with arguments longer than 16 characters should be silently dropped. </p>
      <p> The reply will be formatted as: </p>
    </blockquote>
  </blockquote>
  <MENU> 
    <menu> 
      <menu>
        <li>&lt;marker&gt; PONG &lt;space&gt; &lt;arg&gt; &lt;marker&gt; </li>
      </menu>
    </menu>
  </MENU>
  <blockquote> 
    <blockquote>
      <p> Various clients include the ability to run scripts which may choose 
        to receive and reply to this request. At no time should any such script 
        be permitted to filter the request from the client's internal handling, 
        and as such, a client is REQUIRED to produce its own PONG response, subject 
        to flood control. </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="4.3">4.3 CLIENTINFO (required)</A></H3>
      <p>This request will be used to inquire of the capabilities of a client. 
        The response will be a space separated list of the valid request command 
        words recognised by this client. </p>
      <p> The current implementation of this command allowed for an argument which 
        would provide additional information about the command, acting like a 
        help reference. In the interests of cutting down on the flood potential 
        of clients, as well as the recent need to maintain local help files, this 
        optional behavior is deprecated. </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="4.4">4.4 ACTION &lt;space&gt; &lt;text&gt; (required)</A></H3>
      <p>This request is used to provide an alternative form of speaking either 
        to an individual or channel. This text should be treated in a manner similar 
        to a PRIVMSG from RFC1459. Alternate display methods are encouraged. </p>
      <p> No reply is made to this request. </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="4.5">4.5 USERINFO (optional)</A></H3>
      <p>The response to this request will be a user specified text string, and 
        may contain any valid ASCII character 32 or above. No restrictions are 
        placed on the content of this reply. </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="4.6">4.6 TIME (optional)</A></H3>
      <p>The response to this request will be the date and time of the system 
        the client is running on. The format of this reply will be that used be 
        RFC822, section 5. The general syntax is reprinted here for ease of use. 
        Implementers should review the referenced section for more information. 
      </p>
      <p> SYNTAX </p>
    </blockquote>
  </blockquote>
  <TABLE CELLSPACING=0 CELLPADDING=3 BORDER=0>
    <TR> 
      <TD VALIGN=TOP>date-time =
      <TD>[ day "," ] date time
      <TD> ; dd mm yy<BR>
        ; hh:mm:ss zzz 
    <TR> 
      <TD VALIGN=TOP> day =
      <TD> "Mon" / "Tue" / "Wed" / "Thu" 
    <TR> 
      <TD VALIGN=TOP>
      <TD> / "Fri" / "Sat" / "Sun" 
    <TR> 
      <TD VALIGN=TOP> date =
      <TD> 1*2DIGIT month 2DIGIT
      <TD> ; day month year<BR>
        ; e.g. 20 Jun 82 
    <TR> 
      <TD VALIGN=TOP> month =
      <TD> "Jan" / "Feb" / "Mar" / "Apr"<BR>
        / "May" / "Jun" / "Jul" / "Aug"<BR>
        / "Sep" / "Oct" / "Nov" / "Dec" 
    <TR> 
      <TD VALIGN=TOP> time =
      <TD> hour zone
      <TD> ; ANSI and Military 
    <TR> 
      <TD VALIGN=TOP> hour =
      <TD> 2DIGIT ":" 2DIGIT [":" 2DIGIT]
      <TD> ; 00:00:00 - 23:59:59 
    <TR> 
      <TD VALIGN=TOP> zone =
      <TD> "UT" / "GMT"
      <TD> ; Universal Time<BR>
        ; North American : UT 
    <TR> 
      <TD>
      <TD> / "EST" / "EDT" 
      <TD> ; Eastern: - 5/ - 4 
    <TR> 
      <TD>
      <TD> / "CST" / "CDT" 
      <TD> ; Central: - 6/ - 5 
    <TR> 
      <TD>
      <TD> / "MST" / "MDT" 
      <TD> ; Mountain: - 7/ - 6 
    <TR> 
      <TD>
      <TD> / "PST" / "PDT" 
      <TD> ; Pacific: - 8/ - 7 
    <TR> 
      <TD>
      <TD> / 1ALPHA 
      <TD> ; Military: Z = UT;<BR>
        ; A:-1; (J not used)<BR>
        ; M:-12; N:+1; Y:+12 
    <TR> 
      <TD>
      <TD> / ( ("+" / "-") 4DIGIT ) 
      <TD> ; Local differential<BR>
        ; hours+min. (HHMM) 
  </TABLE>
  <blockquote> 
    <blockquote>
      <p>&nbsp; </p>
    </blockquote>
  </blockquote>
  <MENU> 
    <menu> 
      <menu>
        <li>&lt;marker&gt; TIME &lt;space&gt; &lt;date-time&gt; &lt;marker&gt; 
        </li>
      </menu>
      <li></li>
    </menu>
  </MENU>
  <blockquote> 
    <blockquote>
      <H3><A NAME="4.7">4.7 DCC &lt;space&gt; &lt;type&gt; &lt;space&gt; &lt;protocol&gt; 
        &lt;space&gt; &lt;ip&gt; &lt;space&gt; &lt;port&gt; [&lt;space&gt; &lt;arg&gt; 
        [&lt;space&gt; &lt;arg&gt; [...]]] (optional)</A></H3>
      <p>This implements the Direct Client to Client protocol. The intent of this 
        protocol is to facilitate the transfer of information from client to client, 
        without directly accessing the IRC network. An initial message is sent 
        from the initiator to the recipient, where an IP and PORT are extracted 
        from the message and a direct TCP connection is established. The intent 
        of the connection is indicated by the TYPE field on the original message. 
      </p>
    </blockquote>
  </blockquote>
  <MENU> 
    <menu> 
      <menu>
        <li></li>
      </menu>
    </menu>
    <blockquote> 
      <blockquote>
        <H3><A NAME="4.7.1"> 4.7.1 CHAT &lt;space&gt; &lt;protocol&gt; &lt;space&gt; 
          &lt;ip&gt; &lt;space&gt; &lt;port&gt;</A></H3>
        <p>CHAT is used to initiate a conversation directly between clients. Often 
          used to bypass the IRC network, and its associated latencies in delivering 
          messages. May also be used for other unspecified purposes. </p>
        <p> All messages recieved via the DCC CHAT connection should be treated 
          in the same fashion as messages received from the IRC network via a 
          PRIVMSG. This extention of the current protocol allows further requests 
          or text attributes to be exchanged once the connection is established. 
        </p>
        <p> The &lt;protocol&gt; will be used to determine what, if any, protocol 
          will be used in the exchange of messages. The recipient must be able 
          to support the requested protocol, or it must not establish the connection, 
          returning an error reply, subject to flood control, as follows: </p>
      </blockquote>
    </blockquote>
    <MENU> 
      <menu> 
        <menu>
          <li>&lt;marker&gt; ERRMSG &lt;space&gt; DCC &lt;space&gt; CHAT &lt;space&gt; 
            &lt;protocol&gt; &lt;space&gt; unavailable &lt;marker&gt; </li>
        </menu>
      </menu>
    </MENU>
    <blockquote> 
      <blockquote>
        <p> Currently, the only protocol which is in use is 'chat'. This will 
          be deprecated in favour of the schemes discussed in section 5. As of 
          this writing, the only valid protocol is 'clear'. Others may be added 
          as necessary, and will be published from time to time in a supplement 
          to this RFC. </p>
        <p> If the recipient of the offer does not accept within a given time 
          frame, 5 minutes seems appropriate, or the recipient declines to enter 
          a chat with the initiator, a negative acknowledgement should be sent, 
          subject to flood control. The format of this rejection should be: </p>
      </blockquote>
    </blockquote>
    <MENU> 
      <menu> 
        <menu>
          <li>&lt;marker&gt; ERRMSG &lt;space&gt; DCC &lt;space&gt; CHAT &lt;space&gt; 
            &lt;protocol&gt; &lt;space&gt; declined &lt;marker&gt; </li>
        </menu>
      </menu>
    </MENU>
    <blockquote> 
      <blockquote>
        <p> Upon reciept of this message, the initiator should inform its user 
          and clear the offered connection. </p>
        <p> Should the cause of the failure be for a reason other than timeout 
          or user rejection, the rejection message should take the following format: 
        </p>
      </blockquote>
    </blockquote>
    <MENU> 
      <menu> 
        <menu>
          <li>&lt;marker&gt; ERRMSG &lt;space&gt; DCC &lt;space&gt; CHAT &lt;space&gt; 
            &lt;protocol&gt; &lt;space&gt; &lt;error&gt; &lt;marker&gt; </li>
        </menu>
        <li></li>
      </menu>
    </MENU>
    <blockquote> 
      <blockquote>
        <H3><A NAME="4.7.2"> 4.7.2 XMIT &lt;space&gt; &lt;protocol&gt; &lt;space&gt; 
          &lt;ip&gt; &lt;space&gt; &lt;port&gt; [&lt;space&gt; &lt;name&gt; [&lt;space&gt; 
          &lt;size&gt; [&lt;space&gt; &lt;MIME-type&gt;]]]</A></H3>
        <p> XMIT is intended to act as a replacement and enhancement of the original 
          DCC SEND protocol. One of the main failings of the older file exchange 
          is it required an acknowledgement of receipt of data prior to more data 
          being sent. This is a direct duplication of TCP streams, and as such 
          is redundant. DCC SEND also lacks the capacity to restart a failed transmission 
          from any other point than the beginning of the file. </p>
        <p> In order to maintain compatibility with the CHAT request, XMIT will 
          make use of identical initial arguments. </p>
        <p> The &lt;protocol&gt; will be used to determine what, if any, protocol 
          will be used in the exchange of data. The recipient must be able to 
          support the requested protocol, or it must not establish the connection, 
          returning an error reply, subject to flood control, as follows: </p>
      </blockquote>
    </blockquote>
    <MENU> 
      <menu> 
        <menu>
          <li>&lt;marker&gt; ERRMSG &lt;space&gt; DCC &lt;space&gt; CHAT &lt;space&gt; 
            &lt;protocol&gt; &lt;space&gt; unavailable &lt;marker&gt; </li>
        </menu>
      </menu>
    </MENU>
    <blockquote> 
      <blockquote>
        <p> As of this writing, the only valid protocol is 'clear'. Others may 
          be added as necessary, and will be published from time to time in a 
          supplement to this RFC. This will be used primarily to support encryption 
          methods, although other uses are not disallowed. See section 5 for a 
          description of the 'clear' protocol. </p>
        <p> The &lt;file&gt;, &lt;size&gt; and &lt;MIME-type&gt; fields are optional. 
          The recipient client should provide adequate means to create a local 
          file from the offered data stream. Alternatively the stream may be directed 
          to another program for handling. </p>
        <p> Should it be desired to supply a MIME-type in the case where either 
          the file has no name (is from a live feed) or has undetermined size, 
          missing fields must be filled in with '-'. A filename of '-' or beginning 
          with a '-' must be quoted to avoid confusion with the place holder. 
        </p>
        <p> If the recipient of the offer does not accept within a given time 
          frame, 5 minutes seems appropriate, or the recipient declines to accept 
          the offer from the initiator, a negative acknowledgement should be sent, 
          subject to flood control. The format of this rejection should be: </p>
      </blockquote>
    </blockquote>
    <MENU> 
      <menu> 
        <menu>
          <li>&lt;marker&gt; ERRMSG &lt;space&gt; DCC &lt;space&gt; XMIT &lt;space&gt; 
            &lt;protocol&gt; &lt;space&gt; declined &lt;marker&gt; </li>
        </menu>
      </menu>
    </MENU>
    <blockquote> 
      <blockquote>
        <p> Upon reciept of this message, the initiator should inform its user 
          and clear the offered connection. </p>
        <p> Should the cause of the failure be for a reason other than timeout 
          or user rejection, the rejection message should take the following format: 
        </p>
      </blockquote>
    </blockquote>
    <MENU> 
      <menu> 
        <menu>
          <li>&lt;marker&gt; ERRMSG &lt;space&gt; DCC &lt;space&gt; XMIT &lt;space&gt; 
            &lt;protocol&gt; &lt;space&gt; &lt;error&gt; &lt;marker&gt; </li>
        </menu>
      </menu>
    </MENU>
    <blockquote> 
      <blockquote>
        <p> The transmission of data on the established connection will be dictated 
          by the protocol definiton in section 5. </p>
      </blockquote>
    </blockquote>
    <menu> 
      <menu>
        <li></li>
      </menu>
    </menu>
    <blockquote> 
      <blockquote>
        <H3><A NAME="4.7.3"> 4.7.3 OFFER &lt;space&gt; &lt;protocol&gt; &lt;space&gt; 
          &lt;ip&gt; &lt;space&gt; &lt;port&gt; [&lt;space&gt; &lt;file&gt; [&lt;space&gt; 
          &lt;size&gt; [&lt;space&gt; &lt;MIME-type&gt;]]]</A></H3>
        <p>This type is identical in all respects to the XMIT indicated above, 
          but it is designed for use on a channel, where the offer message will 
          be broadcast to multiple individuals. The initiator will open a server 
          socket (LISTEN) and accept connections on this socket as long as it 
          is open. Each such accepted connection will be handled identically to 
          a DCC XMIT connection. </p>
        <p> The offering socket may be closed at any time by the initiating client, 
          and a reasonable timeout value on the offer would also be indicated. 
          Closing the offer socket does not affect the state of any of the previously 
          established XMIT connections. </p>
      </blockquote>
    </blockquote>
    <menu>
      <li></li>
    </menu>
  </MENU>
  <blockquote> 
    <blockquote>
      <H3><A NAME="4.8">4.8 XDCC &lt;space&gt; &lt;type&gt; [&lt;space&gt; &lt;arg&gt; 
        [...]] (optional)</A></H3>
      <p>eXtended DCC protocol is implemented primarily in slower scripts at this 
        time. It's primary purpose allows the client to act as a file server, 
        being automatically able to initiate DCC SEND requests. The client, using 
        whatever means is most appropriate, builds a list of packages which are 
        available for transmission. This list is then available for anyone on 
        IRC to transfer files from. </p>
    </blockquote>
  </blockquote>
  <MENU> 
    <menu> 
      <menu>
        <li></li>
      </menu>
    </menu>
    <blockquote> 
      <blockquote>
        <H3><A NAME="4.8.1"> 4.8.1 LIST [&lt;space&gt; &lt;arg&gt;]</A></H3>
        <p>In response to this request, the recipient will send to the initiator 
          a list of offered packages. With each package will be a brief description 
          of the file or files included within the package. The exact format and 
          lines/package are at the discretion of the implementing client. </p>
        <p> Use of the argument form of this request will provide the initiator 
          with a list of files contained within a given package, and possibly 
          a description of each file. Again, the format of the response is at 
          the discretion of the implementor. </p>
      </blockquote>
    </blockquote>
    <menu> 
      <menu>
        <li></li>
      </menu>
    </menu>
    <blockquote> 
      <blockquote>
        <H3><A NAME="4.8.2"> 4.8.2 SEND &lt;space&gt; &lt;arg&gt;</A></H3>
        <p>This will initiate the transfer of files within the specified package. 
          Each file offered will generate either a DCC SEND or DCC OFFER, based 
          on the destination of the request. At the discretion of the client developer, 
          requests directed to channels may result in a DCC OFFER being made to 
          the entire channel, or directly back to the user via a DCC SEND. Use 
          of this feature violates the rule of RFC 1459, although I do not believe 
          it violates the spirit intended by the statement that a PRIVMSG should 
          not be sent in response to a PRIVMSG. </p>
      </blockquote>
    </blockquote>
    <menu>
      <li></li>
    </menu>
  </MENU>
  <blockquote> 
    <blockquote>
      <H3><A NAME="4.9">4.9 URL (optional)</A></H3>
      <p>This request is a supplement to USERINFO, and is designed to allow users 
        to request and respond with their home pages. The format of the reply 
        is: </p>
    </blockquote>
  </blockquote>
  <MENU> 
    <menu> 
      <menu>
        <li>&lt;marker&gt; URL &lt;space&gt; &lt;text&gt; &lt;marker&gt;. </li>
      </menu>
    </menu>
  </MENU>
  <blockquote> 
    <blockquote>
      <p> The user of the recipient client controls what text is returned. Upon 
        reciept, the initiator of the request may direct the response to be placed 
        in a list of extracted urls, or may directly activate an appropriate browser 
        to view the home page returned. </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="4.10">4.10 EXT &lt;space&gt; &lt;id&gt; [&lt;space&gt; &lt;arg&gt; 
        [...]] (optional)</A></H3>
      <p>This request is used to provide EXTentions to the protocol on a client 
        by client basis. The use of the assigned ID (section 5) is to guarantee 
        uniqueness of any request. No restrictions are placed on content beyond 
        the ID. Recipients of a request which they do not comprehend may ignore 
        the request silently. </p>
      <p> Any request implemented using EXT should be converted to a standard 
        request once it has been shown to function, is approved by the committee 
        for CTCPs, and incorporated into a rewrite of this RFC. </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="4.11">4.11 SCR &lt;space&gt; &lt;sid&gt; [&lt;space&gt; &lt;arg&gt; 
        [...]] (optional) </A></H3>
      <p>This request provides a means for scripts executing within a client to 
        provide extensions not provided by the client. The &lt;sid&gt; field is 
        a 3 character ID field for use by scripts. Clients should always ignore 
        this request, allowing only a script to generate a response no restrictions 
        on content are imposed. Script is responsible for quoting any undesirable 
        characters in the argument or reply. </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="4.12">4.12 Deprecations (required)</A></H3>
      <p>Currently there are clients which implement requests which are of no 
        significant value in the face of these specificiations. All such requests 
        will generate an ERRMSG reply. The list of deprecated requests is: </p>
      <p> ECHO, SED, FINGER, UTC, ERRMSG (as a request), CLIENTINFO &lt;arg&gt;, 
        SOURCE, and DCC SEND. </p>
    </blockquote>
  </blockquote>
</MENU>
<blockquote> 
  <blockquote>
    <p>&nbsp;</p>
    <H3><A NAME="5">5. Assigned IDs</A></H3>
    <p><MENU> </p>
  </blockquote>
  <ul>
    <li>
      <H3><A NAME="5.1">5.1 Client Extensions</A></H3>
    </li>
  </ul>
</blockquote>
<TABLE CELLSPACING=0 CELLPADDING=3 BORDER=1>
  <TR> 
    <TH>Value
    <TH>Client(s)
    <TH>OS
    <TH>Author/Developers
    <TH>Email Contact 
  <TR> 
    <TD ALIGN=CENTER>TST
    <TD>Reserved
    <TD ALIGN=CENTER>N/A
    <TD ALIGN=CENTER>N/A
    <TD ALIGN=CENTER>N/A 
  <TR> 
    <TD ALIGN=CENTER>ILC
    <TD>IRC/2 & PMIRC/2
    <TD ALIGN=CENTER>OS/2
    <TD ALIGN=CENTER>Innovative Logic Corp
    <TD ALIGN=CENTER>&lt;irc2@invlogic.com&gt; 
</TABLE>
<ul>
  <blockquote>
    <p>[ please send me a private email at mmclagan@invlogic.com and give me your 
      choice of IDs ] </p>
  </blockquote>
  <ul>
    <li>
      <H3><A NAME="5.2">5.2 DCC protocols</A></H3>
      <p><MENU> </p>
    </li>
    <li>
      <H3><A NAME="5.2.1"> 5.2.1 clear</A></H3>
      <p>This protocol must be supported by all clients. This will be the most 
        widely used method for inter-client communications. As its name implies, 
        data is transmitted without any form of encryption. This is therefore 
        an insecure protocol and should be used only in circumstances where information 
        contained in the packets is public knowledge. </p>
    </li>
  </ul>
</ul>
<MENU> 
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="5.2.1.1"> 5.2.1.1 CHAT</A></H3>
      <p>In the context of the CHAT protocol, no initial handshaking will be undertaken. 
      </p>
    </blockquote>
  </blockquote>
  <menu> 
    <menu>
      <li></li>
    </menu>
  </menu>
  <blockquote> 
    <blockquote>
      <H3><A NAME="5.2.1.2"> 5.2.1.2 XMIT</A></H3>
      <p> While there is no handshaking for encryption, there is a small handshake 
        used to allow for resumption of transmission. The initiator will send 
        4 byte timestamp value, in network byte order of seconds since the epoch. 
        This value will be compared with the stamp on any file of the same name 
        the client has. </p>
      <p> If this matches then the client will transmit a 4 byte offset into the 
        file from which the initiator should begin transmission. If they do not 
        match, the client may either overwrite the current file or select another 
        name at its discretion. In this case, a 4 byte 0 will be transmitted, 
        indicating to the initiator that it should commence transmission from 
        the begining of the file. </p>
      <p> Clients in environments not offering the epoch time value may send a 
        0 value, which should be interpreted by the recipient as an indication 
        that resumed transfers are not supported and return a 0 value, taking 
        appropriate steps to rename or create a new name for the incoming file. 
      </p>
      <p> Upon completion of the transfer, the client should set the files time/date 
        to that specified in the initial epoch value. If this is value is 0, then 
        the current date/time should be used as stamped by the operating system. 
      </p>
    </blockquote>
  </blockquote>
</MENU>
<ul>
  <ul>
    <li>
      <H3><A NAME="5.2.2"> 5.2.2 others</A></H3>
      <p>Other protocols may be implemented, and will be described in a supplement 
        to this RFC. Any protocol implemented should build upon the 'clear' protocol, 
        allowing maximal reusage of code. This will affect primarily XMIT as the 
        CHAT protocol carries no additional handshaking. </p>
    </li>
  </ul>
</ul>
</body>
</html>
