.TH "DCCSERVER" "1" "January 20, 2012" "NiH" "General Commands Manual"
.nh
.if n .ad l
.SH "NAME"
\fBdccserver\fR
\- simulate mIRC's /dccserver command
.SH "SYNOPSIS"
.HP 10n
\fBdccserver\fR
[\fB\-ehiv\fR]
[\fB\-n\fR\ \fInickname\fR]
[\fB\-p\fR\ \fIport\fR]
.SH "DESCRIPTION"
\fBdccserver\fR
aims to provide the functions of mIRC's /dccserver command.
.PP
Currently, Chat and Send (including resume) modes are supported.
Fserve and Get mode are not yet supported.
.PP
All connections are accepted; some simple checks on allowed file names
are done.
During connectione establishment, there is a 15 seconds timeout; during
transfers, it is 2 minutes.
Chats have no timeout.
.PP
Supported options:
.TP 15n
\fB\-e\fR
Echo lines input by the user.
Useful e.g. if you are using dccserver in an
irssi(1)
window (see also the
\fB\-i\fR
option and the
\fIEXAMPLES\fR
section).
.TP 15n
\fB\-h\fR
Display a short help message.
.TP 15n
\fB\-i\fR
Do not filter out control characters for color, bold, reverse, and
underlined text.
Useful if your terminal or wrapper can interpret them.
.TP 15n
\fB\-n\fR \fInickname\fR
Set nickname used in handshake to
\fInickname\fR.
Should be the same nickname that you use on IRC, otherwise most
clients will complain and close the connection.
Defaults to
\(lqdccserver\(rq.
.TP 15n
\fB\-p\fR \fIport\fR
Listen for connections on port
\fIport\fR.
You can specify this argument multiple times to listen on more than
one port.
If no
\fB\-p\fR
is given,
\fBdccserver\fR
will listen on port 59, since that is mIRC's default port.
Please note that you have to have root privileges to bind to ports
below 1024.
See
\fISECURITY CONSIDERATIONS\fR
below.
.TP 15n
\fB\-v\fR
Display program name and version number.
.PP
After a client has connected, you can send commands to it manually.
This is useful for chats or fserves.
The syntax is
\(lq<nn>: <text>\(rq
where
\(lq<nn>\(rq
is the number of the child, and
\(lq<text>\(rq
the text you want to send.
For example:
\(lq0:\ dir\(rq.
Please note that the
\(lq\&:\(rq
and the space are necessary.
.PP
Text coming from the remote clients will be shown prepended by their
nickname and child ID.
.PP
You can give
\fBdccserver\fR
commands by entering one of the following keywords without a child ID
in front:
.TP 12n
\fBclose X\fR
to close the connection with ID X, e.g.,
\fBclose 3\fR.
.TP 12n
\fBinfo\fR
to get an overview of the current connection state.
.TP 12n
\fBquit\fR
to close all connections and exit the program.
.SH "EXAMPLES"
Listen on ports 59 and 37334 as user
\(lqyournick\(rq:
.nf
.sp
.RS 6n
dccserver -n yournick -p 59 -p 37334
.RE
.fi
.PP
With
irssi(1),
you could create the following alias (one line):
.nf
.sp
.RS 6n
/alias DCCSERVER
 window new hidden;
 window name dccserver$0;
 echo dccserver for $N on port $0;
 exec -name dccserver$0 -nosh -interactive -window dccserver -n $N -p $0 -i -e
.RE
.fi
.PP
and then open a new window with a dccserver inside with
\(lq/dccserver 59\(rq
for port 59.
.SH "SEE ALSO"
dccsend(1)
.SH "AUTHORS"
\fBdccserver\fR
was written by
Thomas Klausner <\fItk@giga.or.at\fR>.
.SH "BUGS"
Get and Fserve modes are not yet supported.
.SH "SECURITY CONSIDERATIONS"
mIRC's default port is 59.
To bind to ports below 1024, one needs root privileges; for this reason
\fBdccserver\fR
is installed setuid root.
To limit damage done in case of trouble,
\fBdccserver\fR
chroot(2)s
itself in the current directory and drops the setuid privileges as soon
as possible.
.PP
Alternatively, you can remove the setuid bit from
\fBdccserver\fR
with
\(lq\fBchmod u-s /path/to/dccserver\fR\(rq
with the limitation that you will only be able to use
\fBdccserver\fR
on ports above 1024, and you won't get the effect of
chroot(2).
